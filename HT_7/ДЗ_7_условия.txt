1. В командной строке передаются два имени файлов.
Если оба имени указывают на один и тот же файл (помним, что один файл может иметь несколько имен), выдать диагностику и ничего делать, иначе первый файл — исходный, во второй записать результат обработки.
Обработка файла:
Использовать функции низкоуровневой работы с файлами.
Файл исходный — не текстовый, бинарный. В файле содержатся 32-битные целые знаковые числа. Переставить в исходном файле числа так, чтобы в начале файла располагались отрицательные числа, а в конце — неотрицательные. Порядок чисел среди чисел одного знака произвольный. Файл в память целиком не считывать, можно одновременно считывать не более 10 чисел файла. Временный файл создавать нельзя.
В файл-результат записать текстовую версию обработанного файла — числа в текстовом виде через пробел.
Для тестирования написать программу создания исходного файла. Учесть, что файл может быть пустым, может содержать только числа одного знака.

2. Работа с файлом — высокоуровневая или низкоуровневая — по желанию.
Написать функцию с переменным количеством параметров, которая работает с заданным файлом как команда uniq - позволяет при выводе на экран сократить до одной подряд идущие одинаковые строки. Обязательный параметр функции — имя файла, необязательные — опции , любая из них (в том числе и все) при запуске функции может отсутствовать, могут появляться в разном порядке.
Опции команды uniq :
-c – перед каждой выводимой строкой помещать ее кратность во входном файле.
-d - подавить вывод неповторяющихся строк.
-u - выводить только уникальные строки.
-s число - при сравнении игнорировать заданное число начальных символов строки.
В main имя файла (или имя файла и опции) передается в командной строке. Продемонстрировать работу функции.
