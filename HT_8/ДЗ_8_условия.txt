1. Работа с каталогом. Написать программу, которая для текущего каталога выполняет следующие действия:
1) для каждого содержащегося в каталоге файла-символьной_ссылки вывести имя файла, на который она ссылается (по желанию можно пройти до конца, если окажется ссылкой на ссылку).
Создать символьную ссылку ln -s filename fsymlinkname
Читать из символьной ссылки см. функцию readlink.
2) если в каталоге есть подкаталоги, рекурсивно обойти все подкаталоги (для всех уровней вложенности) и вывести на экран имена содержащихся в них исполняемых файлов ( только тех, для которых и пользователь, и группа (оба одновременно) имеют право на исполнение файла). Функцию смены каталога chdir не использовать.
Если для тестирования потребуется сменить или установить права доступа для файла, используйте команду chmod.
Обратите внимание, что при обращении к функции stat/lstat нужно дополнить полученное имя так, чтобы оно указывало на файл из соответствующего каталога.

2. Для тестирования написать программу, которая получает в командной строке число N и выводит на экран свой pid N раз. Сделать 3 варианта завершения программы — exit (0), exit(1), abort() и создать 3 исполняемых файла соответственно.
Программа. В командной строке передаются имена 2-ух исполняемых файлов, для каждого по 1 параметру, а также символ p или s — определяет способ запуска.
p) Запустить эти программы с использованием передачи данных в виде списка на параллельное исполнение (т.е. работают одновременно). При N = 30-50 должно быть видно перемешивание вывода.
s) Запустить эти программы (переданные в командной строке) с использованием векторной передачи данных на последовательное исполнение (работают строго одна после другой).
Определить с помощью макросов, как завершились запущенные программы, вывести эту информацию на экран (успешно ли (т.е. по exit), что вернул exit, по какому сигналу).
По окончании работы не должно остаться процессов «зомби».
